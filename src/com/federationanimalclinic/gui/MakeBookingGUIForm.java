/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.federationanimalclinic.gui;
import java.awt.List;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JOptionPane;

import com.federationanimalclinic.beans.Animal;
import com.federationanimalclinic.beans.Appointment;
import com.federationanimalclinic.beans.Clinic;
import com.federationanimalclinic.beans.Veterinarian;
public class MakeBookingGUIForm extends javax.swing.JFrame {
    /**
     * Creates new form MakeBookingGUIForm
     */
    public MakeBookingGUIForm() {
        initComponents();
        initFormData();
        // initialize form elements here //
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        animalComboBox = new javax.swing.JComboBox<>();
        vetComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        roomComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        appointmentTypeComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        nurseCheckBox = new javax.swing.JCheckBox();
        cageCheckBox = new javax.swing.JCheckBox();
        bedCheckBox = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        dateTimeEditText = new javax.swing.JTextField();
        quitButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Make Booking");
        setResizable(false);

        animalComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        animalComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Select Animal---" }));

        vetComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        vetComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Select Veterinarian---" }));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Animal");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Verterinarian");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Room");

        roomComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        roomComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Select Room---" }));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Appointment Type");

        appointmentTypeComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        appointmentTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Select Appointment Type---" }));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Specific Resources");

        nurseCheckBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nurseCheckBox.setText("Nurse Or Handler");

        cageCheckBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cageCheckBox.setText("Cage");

        bedCheckBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bedCheckBox.setText("Bed");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Date and Time");

        dateTimeEditText.setEditable(false);
        dateTimeEditText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        quitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        quitButton.setText("Quit");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        saveButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nurseCheckBox)
                                .addGap(52, 52, 52)
                                .addComponent(bedCheckBox)
                                .addGap(72, 72, 72)
                                .addComponent(cageCheckBox))
                            .addComponent(jLabel5))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61)
                                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(quitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(41, 41, 41)
                                .addComponent(dateTimeEditText))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(animalComboBox, 0, 177, Short.MAX_VALUE)
                                    .addComponent(roomComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(55, 55, 55)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(vetComboBox, 0, 194, Short.MAX_VALUE)
                                    .addComponent(appointmentTypeComboBox, 0, 1, Short.MAX_VALUE))))
                        .addGap(79, 79, 79))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(animalComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(vetComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(roomComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(appointmentTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(jLabel5)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nurseCheckBox)
                    .addComponent(bedCheckBox)
                    .addComponent(cageCheckBox))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateTimeEditText, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_quitButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        if(isDataProvided()){
            // Save Record //
            Appointment appointment = new Appointment();
            appointment.setAppoinmentType(appointmentTypeComboBox.getSelectedItem().toString());
            appointment.setPetName(animalComboBox.getSelectedItem().toString());
            appointment.setVetName(vetComboBox.getSelectedItem().toString());
            appointment.setRoomNumber(Integer.parseInt(roomComboBox.getSelectedItem().toString()));
            appointment.setDate(dateTimeEditText.getText().toString());
            if(nurseCheckBox.isSelected()){
                appointment.setNURSE(true);
            }
            if(bedCheckBox.isSelected()){
                appointment.setBED(true);
            }
            if(cageCheckBox.isSelected()){
                appointment.setCAGE(true);
            }
            appointmentList.add(appointment);
            MainGUI.setAppointmentList(appointmentList);
            JOptionPane.showMessageDialog(null,"Appointment Successfull! ");
            removePetandVetFromList();
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MakeBookingGUIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MakeBookingGUIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MakeBookingGUIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MakeBookingGUIForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MakeBookingGUIForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> animalComboBox;
    private javax.swing.JComboBox<String> appointmentTypeComboBox;
    private javax.swing.JCheckBox bedCheckBox;
    private javax.swing.JCheckBox cageCheckBox;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField dateTimeEditText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JCheckBox nurseCheckBox;
    private javax.swing.JButton quitButton;
    private javax.swing.JComboBox<String> roomComboBox;
    private javax.swing.JButton saveButton;
    private javax.swing.JComboBox<String> vetComboBox;
    // End of variables declaration//GEN-END:variables

    
    private ArrayList<Animal> animalList;
    private ArrayList<Veterinarian>  vetList;
    private ArrayList<Appointment> appointmentList = new ArrayList<>();
    private Clinic clinic = new Clinic();
    private String typesOfAppointments[] = {"Emergency","Phone","Late Evening Surgery","Minor Illness","Routine"};
    private int roomNumbers[] =  {44,52,112,43,55};   
    private void initFormData() {
    animalList = MainGUI.getAnimalList();
    vetList = MainGUI.getVetList();
    if(MainGUI.getAppointmentList() != null){
    appointmentList = MainGUI.getAppointmentList();
    }
    for(int i=0;i<animalList.size();i++)
    {
        Animal animal = animalList.get(i);
        animalComboBox.addItem(animal.getName());
    }
    for(int i=0;i<vetList.size();i++){
        Veterinarian veterinarian = vetList.get(i);
        vetComboBox.addItem(veterinarian.getName());
    }
    for(int i=0;i<typesOfAppointments.length;i++){
        appointmentTypeComboBox.addItem(typesOfAppointments[i]);
    }
    for(int i=0;i<roomNumbers.length;i++){
        roomComboBox.addItem(roomNumbers[i]+"");
    }
   DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
   LocalDateTime now = LocalDateTime.now();
   dateTimeEditText.setText(dtf.format(now));
   
     
    
    //JOptionPane.showMessageDialog(null,animalComboBox.getItemAt(0));
    }

    private boolean isDataProvided(){
        if(animalComboBox.getSelectedItem().equals(animalComboBox.getItemAt(0))){
         JOptionPane.showMessageDialog(null,"Please Select Animal");
         return false;
        }
        else if(vetComboBox.getSelectedItem().equals(vetComboBox.getItemAt(0))){
        JOptionPane.showMessageDialog(null,"Please Select Veterinarian");
        return false;
        }
        else if(appointmentTypeComboBox.getSelectedItem().equals(appointmentTypeComboBox.getItemAt(0))){
        JOptionPane.showMessageDialog(null,"Please Select Appointment Type");
        return false;
        }
        else if(roomComboBox.getSelectedItem().equals(roomComboBox.getItemAt(0))){
        JOptionPane.showMessageDialog(null,"Please Select Room Number");
        return false;
        }
        else{
        return true;
        }
    }
    private void removePetandVetFromList() {
    // remove pet
    ArrayList<Animal> newAnimalList = new  ArrayList<>();
    for(int i=0;i<animalList.size();i++){
        Animal animal = animalList.get(i);
        if(! animal.getName().equals(animalComboBox.getSelectedItem().toString())){
            newAnimalList.add(animal);
        }
    }
    ArrayList<Veterinarian> newVetList = new ArrayList<>();
    for(int i=0;i<vetList.size();i++){
        Veterinarian veterinarian  = vetList.get(i);
        if(! veterinarian.getName().equals(vetComboBox.getSelectedItem().toString())){
        newVetList.add(veterinarian);
        } 
    }
    MainGUI.setAnimalList(newAnimalList);
    MainGUI.setVetList(newVetList);
    this.dispose();
    }
}